name: Converter NOW

on:
  push:
    tags: ['v*']

jobs:
  build_deploy:
    name: Build and release Android APK
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'

    - name: Setup Flutter
      uses: subosito/flutter-action@v1.5.3
      with:
        channel: stable

    - name: Enable Flutter Linux desktop
      run: flutter config --enable-linux-desktop

    - name: Flutter version
      run: flutter --version

    - name: Cache pub dependencies
      uses: actions/cache@v2
      with:
        path: ${{ env.FLUTTER_HOME }}/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: ${{ runner.os }}-pub-

    - name: Download pub dependencies
      run: flutter pub get

    - name: Build for Web
      run: flutter build web

    - name: Upload to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CONVERTER_NOW }}'
        channelId: live
        projectId: converter-now

    - name: Download Android keystore
      id: android_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: key.jks
        encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  
    - name: Create key.properties
      run: |
        echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
        echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
  
    - name: Build Android App Bundle
      run: flutter build appbundle

    - name: Build Android APK files
      run: flutter build apk --release --split-per-abi

    - name: Build for Linux
      run: flutter build linux --release

    - name: Release to GitHub
      uses: ncipollo/release-action@v1.8.10
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab,build/linux/x64/release/bundle"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
        allowUpdates: true     #so if you rerun a job it will overwrite the existing files

    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'

    - name: Download bundle dependencies
      run: |
        gem install bundler:2.0.2
        bundle config path vendor/bundle
        bundle install

    - name: Release to Google Play (beta)
      env:
        SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
        SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
      run: |
        bundle exec fastlane supply \
        --aab build/app/outputs/bundle/release/app-release.aab \
        --track beta